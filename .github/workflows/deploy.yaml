name: Build, Test and Deploy

on:
  push:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: kubsu
          POSTGRES_PASSWORD: kubsu
          POSTGRES_DB: kubsu
        ports:
          - "5432:5432"
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and test
      uses: docker/build-push-action@v3
      with:
        context: .
        target: builder
        tags: app-builder:latest

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME_NEW }}/kubsu-app:latest

    - name: Deploy to server
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          # Login to Docker Hub
          podman login -u ${{ secrets.DOCKER_HUB_USERNAME_NEW }} -p ${{ secrets.DOCKER_HUB_TOKEN }} docker.io

          # Stop and remove existing container if it exists
          podman stop kubsu-app || true
          podman rm kubsu-app || true

          # Optional: Remove existing image to force clean pull
          podman rmi ${{ secrets.DOCKER_HUB_USERNAME_NEW }}/kubsu-app:latest || true

          # Pull new image from Docker Hub
          podman pull ${{ secrets.DOCKER_HUB_USERNAME_NEW }}/kubsu-app:latest

          # Run new container with:
          # - Network host (как в примере, для доступа к localhost PostgreSQL)
          podman run -d \
            --name kubsu-app \
            --network host \
            -e DATABASE_URL=postgresql+psycopg://kubsu:kubsu@127.0.0.1:5432/kubsu \
            ${{ secrets.DOCKER_HUB_USERNAME_NEW }}/kubsu-app:latest

          # Verify deployment
          echo "Container kubsu-app успешно развернут!"
          podman ps --filter "name=kubsu-app" --format "table {{.ID}}\t{{.Names}}\t{{.Status}}"
